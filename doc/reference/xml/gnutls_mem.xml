<?xml version="1.0"?>
<!DOCTYPE refentry PUBLIC "-//OASIS//DTD DocBook XML V4.3//EN"
               "http://www.oasis-open.org/docbook/xml/4.3/docbookx.dtd"
[
  <!ENTITY % local.common.attrib "xmlns:xi  CDATA  #FIXED 'http://www.w3.org/2003/XInclude'">
  <!ENTITY version SYSTEM "version.xml">
]>
<refentry id="gnutls-gnutls-mem">
<refmeta>
<refentrytitle role="top_of_page" id="gnutls-gnutls-mem.top_of_page">gnutls_mem</refentrytitle>
<manvolnum>3</manvolnum>
<refmiscinfo>
  GNUTLS Library
</refmiscinfo>
</refmeta>
<refnamediv>
<refname>gnutls_mem</refname>
<refpurpose></refpurpose>
</refnamediv>

<refsynopsisdiv id="gnutls-gnutls-mem.synopsis" role="synopsis">
<title role="synopsis.title">Synopsis</title>

<synopsis><link linkend="int"><returnvalue>int</returnvalue></link>                 (<link linkend="gnutls-is-secure-memory">*_gnutls_is_secure_memory</link>)         (<parameter>const <link linkend="void"><type>void</type></link> *Param1</parameter>);
<link linkend="void"><returnvalue>void</returnvalue></link> *              <link linkend="gnutls-realloc-fast">gnutls_realloc_fast</link>                 (<parameter><link linkend="void"><type>void</type></link> *ptr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);
<link linkend="svoid"><returnvalue>svoid</returnvalue></link> *             <link linkend="gnutls-secure-calloc">gnutls_secure_calloc</link>                (<parameter><link linkend="size-t"><type>size_t</type></link> nmemb</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);
typedef             <link linkend="svoid">svoid</link>;
</synopsis>
</refsynopsisdiv>

<refsect1 id="gnutls-gnutls-mem.description" role="desc">
<title role="desc.title">Description</title>
<para>
</para>
</refsect1>
<refsect1 id="gnutls-gnutls-mem.details" role="details">
<title role="details.title">Details</title>
<refsect2 id="gnutls-is-secure-memory" role="function">
<title>_gnutls_is_secure_memory ()</title>
<indexterm zone="gnutls-is-secure-memory"><primary>_gnutls_is_secure_memory</primary></indexterm>
<programlisting><link linkend="int"><returnvalue>int</returnvalue></link>                 (*_gnutls_is_secure_memory)         (<parameter>const <link linkend="void"><type>void</type></link> *Param1</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-realloc-fast" role="function">
<title>gnutls_realloc_fast ()</title>
<indexterm zone="gnutls-realloc-fast"><primary>gnutls_realloc_fast</primary></indexterm>
<programlisting><link linkend="void"><returnvalue>void</returnvalue></link> *              gnutls_realloc_fast                 (<parameter><link linkend="void"><type>void</type></link> *ptr</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="gnutls-secure-calloc" role="function">
<title>gnutls_secure_calloc ()</title>
<indexterm zone="gnutls-secure-calloc"><primary>gnutls_secure_calloc</primary></indexterm>
<programlisting><link linkend="svoid"><returnvalue>svoid</returnvalue></link> *             gnutls_secure_calloc                (<parameter><link linkend="size-t"><type>size_t</type></link> nmemb</parameter>,
                                                         <parameter><link linkend="size-t"><type>size_t</type></link> size</parameter>);</programlisting>
<para>
</para></refsect2>
<refsect2 id="svoid" role="typedef">
<title>svoid</title>
<indexterm zone="svoid"><primary>svoid</primary></indexterm>
<programlisting>typedef void svoid;             /* for functions that allocate using gnutls_secure_malloc */
</programlisting>
<para>
</para></refsect2>

</refsect1>

</refentry>
